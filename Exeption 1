public class ExampleExceptionHandling {
    public static void main(String[] args) {
        try {
            // Potensial terjadi exception
            int hasil = divide(10, 0);
            System.out.println("Hasil pembagian: " + hasil);
        } catch (ArithmeticException e) {
            // Menangani exception ArithmeticException
            System.out.println("Error: Terjadi pembagian dengan nol.");
            e.printStackTrace();  // Menampilkan trace exception (opsional)
        } finally {
            // Blok ini akan selalu dijalankan, terlepas dari apakah exception terjadi atau tidak
            System.out.println("Ini akan selalu dijalankan.");
        }

        // Kode lainnya tetap berjalan setelah penanganan exception
        System.out.println("Program selesai.");
    }

    // Fungsi pembagian yang dapat menimbulkan exception
    private static int divide(int numerator, int denominator) {
        return numerator / denominator;
    }
}
